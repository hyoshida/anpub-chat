extends ../layout

block append js
  script(src="/socket.io/socket.io.js")

  script.
    function imageify($target) {
      $target.find('a').each(function() {
        url = $(this).text();
        if (!url.match(/\.(jpg|jpeg|gif|png)$/)) return;

        $image = $('<img/>').attr('src', url);
        $(this).html($image);
      });
    }

    function youtubeify($target) {
      $target.find('a').html(function(_, html) {
        var pattern = /(?:http:\/\/)?(?:www\.)?(?:youtube\.com|youtu\.be)\/(?:watch\?v=)?(.+)/g;
        if (html.match(pattern)) {
          return '<iframe src="http://www.youtube.com/embed/' + RegExp.$1 + '" frameborder="0" allowfullscreen></iframe>';
        } else {
          return html;
        }
      });
    }

    function createMessageElement(data) {
      var $name = $('<span/>').attr('class', 'name').text('@' + data.user_display_name);
      var $time = $('<span/>').attr('class', 'time').text(data.created_at);
      var $body = $('<div/>').attr('class', 'body').text(data.message);

      $body.linkify();
      imageify($body);
      youtubeify($body);

      return $('<div/>')
        .attr('class', 'message')
        .append($name)
        .append($time)
        .append($body);
    }

    function updateCounter() {
      $('#counter').text($('#users li.active').length);
    }

    $(function() {
      io = io.connect();

      // Listen for talk event.
      io.on('talk', function(data) {
        var $message = createMessageElement(data);
        $('#messages').prepend($message);
      });

      // Listen for talk.log event.
      io.on('talk.log', function(data) {
        $.each(data, function() {
          var $message = createMessageElement(this);
          $('#messages').prepend($message);
        });
      });

      // Listen for user.connect event.
      io.on('user.connect', function(user) {
        $user = $("#users").find('[data-user-code="' + user.code + '"]');
        if (!$user.length) {
          $user = $('<li/>').attr('data-user-code', user.code).text(user.display_name);
        }
        $user.attr('class', 'active');
        $user.prependTo('#users');
        updateCounter();
      });

      // Listen for user.disconnect event.
      io.on('user.disconnect', function(user) {
        $user = $("#users").find('[data-user-code="' + user.code + '"]');
        $user.attr('class', 'inactive');
        $user.appendTo('#users');
        updateCounter();
      });

      // Listen for user.log event.
      io.on('user.log', function(users) {
        $.each(users, function() {
          $user = $('<li/>').attr('data-user-code', this.code).text(this.display_name);
          if (this.active_flag) {
            $user.attr('class', 'active');
            $user.prependTo('#users');
          } else {
            $user.attr('class', 'inactive');
            $user.appendTo('#users');
          }
        });
        updateCounter();
      });

      // Emit talk event.
      $('form').submit(function(event) {
        // stop form from submitting normally
        event.preventDefault();

        message = $('input').val();
        if (message.length) {
          io.emit('talk', message);
          $('input').val('');
        }
      });
    });

block content
  #nav
    #counter
    ul#users
  #contents
    form
      input(placeholder="Please type your message")
    #messages
